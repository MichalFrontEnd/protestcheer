$themes: (
  dark: (
    primary: #1a1958,
    primary-variation: #7498ae,
    secondary: #91c2ca,
    text: #f9f9f9,
    text-offset: #aaa,
    highlight: #e7c594,
    shadow: #999,
    shadow-inverse: #bbb,
    accent: #61dafb,
    button-accent: #ff8c00,
    // button-accent: #e7db94,
  ),
  light: (
    primary: #d3e9ed,
    primary-variation: #91c2ca,
    secondary: #1a1958,
    text: #0c0c0c,
    text-offset: #c2c1d1,
    highlight: #e7c594,
    shadow: #bbb,
    shadow-inverse: #999,
    accent: #61dafb,
    button-accent: #484554,
  ),
) !default;
// $globals: ();
//adds colors to root as CSS vars
:root {
  @each $pallete, $shades in $themes {
    @each $color, $value in $shades {
      --clr-#{$pallete}-#{$color}: #{$value};
    }
  }
}

//creates light/dark theme function
@mixin themify($themes) {
  @each $theme, $map in $themes {
    .theme-#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}
@function themed($key) {
  @return map-get($theme-map, $key);
}

// with prefers-color-scheme - requires 2 color lists
// :root {
//   @each $color, $value in $colors.light {
//     --clr-#{$color}: #{$value};
//   }
//   --theme: "light";
// }

// @media (prefers-color-scheme: dark) {
//   :root {
//     @each $color, $value in $colors.dark {
//       --clr-#{$color}: #{$value};
//     }
//     --theme: "dark";
//   }
// }
